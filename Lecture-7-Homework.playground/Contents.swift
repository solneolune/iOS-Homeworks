import Foundation

//: # Main Tasks
//: ### РюЁ 1. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ Enum-рЃў рЃАрЃљрЃ«рЃћрЃџрЃўрЃЌ WeekDay рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃў рЃЦрЃћрЃўрЃАрЃћрЃЉрЃўрЃЌ. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃўрЃдрЃћрЃЉрЃА рЃљрЃЏ рЃћрЃюрЃљрЃЏрЃўрЃА рЃбрЃўрЃърЃА рЃЊрЃљ рЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃњрЃљрЃЊрЃљрЃгрЃЮрЃЊрЃћрЃЉрЃБрЃџрЃў рЃЊрЃдрЃћ рЃАрЃљрЃЏрЃБрЃерЃљрЃЮрЃљ рЃЌрЃБ рЃЊрЃљрЃАрЃЋрЃћрЃюрЃћрЃЉрЃўрЃА.
enum WeekDay {
    case monday, tuesday, wednesday, thursday, friday, saturday, sunday
}

func workOrRest(_ weekday: WeekDay) {
    switch weekday{
    case .saturday, .sunday:
        print("­ЪЈЮ№ИЈ рЃЊрЃљрЃАрЃЋрЃћрЃюрЃћрЃЉрЃўрЃА рЃЊрЃдрЃћ")
    default:
        print("­ЪЉЕ­ЪЈ╗РђЇ­Ъњ╗ рЃАрЃљрЃЏрЃБрЃерЃљрЃЮ рЃЊрЃдрЃћ")
    }
}

workOrRest(WeekDay.monday)
workOrRest(WeekDay.saturday)

//: РюЁ ### 2. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ Enum-рЃў рЃАрЃљрЃ«рЃћрЃџрЃљрЃЊ GialaSquad, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃљрЃдрЃгрЃћрЃарЃА рЃњрЃўрЃљ рЃАрЃБрЃарЃљрЃЏрЃћрЃџрЃљрЃерЃЋрЃўрЃџрЃўрЃА рЃцрЃљрЃюрЃЎрЃџрЃБрЃЉрЃўрЃА рЃгрЃћрЃЋрЃарЃћрЃЉрЃўрЃА рЃЊрЃЮрЃюрЃћрЃћрЃЉрЃА рЃЦрЃћрЃўрЃАрЃћрЃЉрЃўрЃЌ : РђюTsigroviMantoРђЮ, РђюMoshishvlebuliMkerdiРђЮ, РђюTuGapatioРђЮ. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃцрЃарЃЮрЃцрЃћрЃарЃЌрЃў GialaSquad-рЃерЃў, рЃарЃЮрЃЏрЃћрЃџрЃАрЃљрЃф рЃћрЃЦрЃюрЃћрЃЉрЃљ рЃўрЃюрЃцрЃЮрЃарЃЏрЃљрЃфрЃўрЃљ рЃЌрЃБ рЃарЃљ рЃдрЃўрЃарЃА рЃЌрЃўрЃЌрЃЮрЃћрЃБрЃџрЃў рЃЊрЃЮрЃюрЃћ рЃЌрЃЋрЃћрЃерЃў (рЃЊрЃЮрЃюрЃћрЃћрЃЉрЃў рЃЊрЃљрЃџрЃљрЃњрЃћрЃЉрЃБрЃџрЃўрЃљ рЃФрЃЋрЃўрЃарЃўрЃЊрЃљрЃю рЃўрЃљрЃцрЃўрЃАрЃљрЃЎрЃћрЃю). рЃЊрЃљрЃБрЃЏрЃљрЃбрЃћрЃЌ рЃЏрЃћрЃЌрЃЮрЃЊрЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃЌрЃўрЃЌрЃЮрЃћрЃБрЃџрЃў рЃЊрЃЮрЃюрЃўрЃА рЃцрЃљрЃАрЃА
enum GialaSquad {
    case TsigroviManto
    case MoshishvlebuliMkerdi
    case TuGapatio
    
    var monthlySubscription: Decimal {
        switch self {
        case .TsigroviManto:
            return 3000
        case .MoshishvlebuliMkerdi:
            return 2500 // decoy pricing рЃАрЃбрЃарЃљрЃбрЃћрЃњрЃўрЃљ ­ЪњЁ­ЪЈ╗
        case .TuGapatio:
            return 1500
        }
    }
    
    func sendMessageToCustomer() {
        print("­Ъї╣ рЃћрЃЦрЃАрЃЎрЃџрЃБрЃќрЃўрЃБрЃарЃљрЃЊ рЃЌрЃЦрЃЋрЃћрЃюрЃЌрЃЋрЃўрЃА рЃЏрЃЮрЃфрЃћрЃЏрЃБрЃџ рЃцрЃљрЃюрЃЎрЃџрЃБрЃЉрЃерЃў рЃњрЃљрЃгрЃћрЃЋрЃарЃўрЃљрЃюрЃћрЃЉрЃўрЃА рЃцрЃљрЃАрЃў рЃўрЃЦрЃюрЃћрЃЉрЃљ $\(self.monthlySubscription) ­Ъї╣")
    }
}

let customer1 = GialaSquad.MoshishvlebuliMkerdi
customer1.sendMessageToCustomer()

let customer2 = GialaSquad.TsigroviManto
customer2.sendMessageToCustomer()

//: РюЁ ### 3. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ enum-рЃў Weather рЃерЃћрЃЏрЃЊрЃћрЃњрЃў рЃЦрЃћрЃўрЃАрЃћрЃЉрЃўрЃЌ, Sunny, Cloudy, Rainy рЃЊрЃљ Snowy. рЃљрЃЏ рЃЦрЃћрЃўрЃАрЃћрЃЉрЃА рЃБрЃюрЃЊрЃљ рЃ░рЃЦрЃЮрЃюрЃЊрЃћрЃА associated value Celsius-рЃўрЃА рЃАрЃљрЃ«рЃўрЃЌ. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ function рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЏрЃўрЃўрЃдрЃћрЃЉрЃА рЃљрЃЏ enum-рЃА, рЃЊрЃљ рЃЏрЃЮрЃњрЃЋрЃфрЃћрЃЏрЃА рЃарЃћрЃЎрЃЮрЃЏрЃћрЃюрЃЊрЃљрЃфрЃўрЃљрЃА рЃарЃљ рЃБрЃюрЃЊрЃљ рЃЕрЃљрЃЋрЃўрЃфрЃЋрЃљрЃЌ рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃў рЃљрЃЏрЃўрЃюрЃЊрЃўрЃА рЃЏрЃўрЃ«рЃћрЃЊрЃЋрЃўрЃЌ.
enum Weather {
    case Sunny (Celsius: Decimal)
    case Cloudy (Celsius: Decimal)
    case Rainy (Celsius: Decimal)
    case Snowy (Celsius: Decimal)
}

func whatToWear(_ weather: Weather) {
    switch weather {
    case .Sunny(let celsius) where (20.0...) ~= celsius:
        print("­ЪЉА")
    case .Cloudy(let celsius) where (14.0...20.0) ~= celsius:
        print("­ЪЉа")
    case .Rainy(let celsius) where (4.0...14.0) ~= celsius:
        print("­ЪЉб")
    case .Snowy(let celsius) where (...4.0) ~= celsius:
        print("­ЪЦЙ")
    default:
        print("­Ъџе­ЪєўРђ╝№ИЈ рЃфрЃћрЃџрЃАрЃўрЃБрЃАрЃўрЃА рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљ рЃљрЃарЃљрЃАрЃгрЃЮрЃарЃўрЃљ Рђ╝№ИЈ­Ъєў­Ъџе")
    }
}

whatToWear(.Sunny(Celsius: 26))
whatToWear(.Cloudy(Celsius: 16.6))
whatToWear(.Rainy(Celsius: 11.8))
whatToWear(.Snowy(Celsius: -1))

whatToWear(.Sunny(Celsius: 19.99)) // default case

//: ### РюЁ 4. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ struct-рЃў Kanye, рЃцрЃарЃЮрЃцрЃћрЃарЃЌрЃћрЃЉрЃўрЃЌ: album, releaseYear. рЃљрЃЏрЃўрЃА рЃерЃћрЃЏрЃЊрЃћрЃњ рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ array-рЃў Kanye-рЃА рЃбрЃўрЃърЃўрЃА, рЃЕрЃљрЃљрЃЏрЃљрЃбрЃћрЃЌ рЃарЃљрЃЏрЃЮрЃЊрЃћрЃюрЃўрЃЏрЃћ Kanye-рЃА рЃЮрЃЉрЃўрЃћрЃЦрЃбрЃў, рЃЊрЃљ рЃерЃћрЃљрЃЋрЃАрЃћрЃЌ рЃЏрЃљрЃАрЃўрЃЋрЃў рЃЎрЃљрЃюрЃўрЃћрЃћрЃЉрЃўрЃЌ. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЏрЃўрЃўрЃдрЃћрЃЉрЃА рЃљрЃЏ рЃЎрЃљрЃюрЃўрЃћрЃћрЃЉрЃўрЃА рЃЏрЃљрЃАрЃўрЃЋрЃА рЃЊрЃљ рЃгрЃћрЃџрЃА. рЃцрЃБрЃюрЃЦрЃфрЃўрЃљрЃЏ рЃБрЃюрЃЊрЃљ рЃЊрЃљрЃњрЃЋрЃўрЃЉрЃарЃБрЃюрЃЮрЃА рЃДрЃЋрЃћрЃџрЃљ рЃљрЃџрЃЉрЃЮрЃЏрЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃњрЃљрЃЏрЃЮрЃерЃЋрЃћрЃЉрЃБрЃџрЃўрЃљ рЃњрЃљрЃЊрЃљрЃгрЃЮрЃЊрЃћрЃЉрЃБрЃџрЃў рЃгрЃџрЃўрЃА рЃерЃћрЃЏрЃЊрЃћрЃњ рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃЮрЃА рЃўрЃАрЃўрЃюрЃў.
struct Kanye {
    var album: String
    var releaseYear: Int
}

var albumArr: [Kanye] = []

    // рЃЎрЃљрЃюрЃўрЃћрЃА рЃЮрЃЉрЃўрЃћрЃЦрЃбрЃћрЃЉрЃў
var album1 = Kanye(album: "Donda", releaseYear: 2021)
var album2 = Kanye(album: "ye", releaseYear: 2018)
var album3 = Kanye(album: "JESUS IS KING", releaseYear: 2019)
var album4 = Kanye(album: "The Life of Pablo", releaseYear: 2016)
var album5 = Kanye(album: "Yeezus", releaseYear: 2013)

    // рЃЏрЃљрЃАрЃўрЃЋрЃўрЃА рЃерЃћрЃЋрЃАрЃћрЃЉрЃљ рЃЎрЃљрЃюрЃўрЃћрЃћрЃЉрЃўрЃЌ
albumArr.append(contentsOf: [album1, album2, album3, album4, album5])


func filterAlbumsByYear(_ arr: [Kanye], _ year: Int) -> [String] {
    var filteredArr = [String]()
    
    for i in arr {
        if i.releaseYear > year {
            filteredArr.append(i.album)
        }
    }
    
    if filteredArr.count > 0 {
        print("\(year) рЃгрЃџрЃўрЃА рЃерЃћрЃЏрЃЊрЃћрЃњ рЃњрЃљрЃЏрЃЮрЃерЃЋрЃћрЃЉрЃБрЃџрЃў рЃљрЃџрЃЉрЃЮрЃЏрЃћрЃЉрЃўрЃљ: \(filteredArr)")
    } else {
        print("\(year) рЃгрЃџрЃўрЃА рЃерЃћрЃЏрЃЊрЃћрЃњ рЃњрЃљрЃЏрЃЮрЃерЃЋрЃћрЃЉрЃБрЃџрЃў рЃљрЃџрЃЉрЃЮрЃЏрЃў рЃЋрЃћрЃа рЃЏрЃЮрЃўрЃФрЃћрЃЉрЃюрЃљ.")
    }
    return filteredArr
}

filterAlbumsByYear(albumArr, 2017)
filterAlbumsByYear(albumArr, 2026)

//: ### РюЁ 5. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ String-рЃўрЃА рЃбрЃўрЃърЃўрЃА lazy property wrapper рЃАрЃљрЃ«рЃћрЃџрЃљрЃЊ, cachedData. рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃћрЃЉрЃљ рЃњрЃљрЃБрЃЎрЃћрЃЌрЃћрЃЌ рЃЦрЃџрЃЮрЃЪрЃћрЃарЃўрЃЌ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃАрЃбрЃарЃўрЃюрЃњрЃА рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃўрЃЌ Рђюlazy рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃћрЃЉрЃБрЃџрЃўрЃљРђЮ. рЃЏрЃўрЃгрЃЋрЃЊрЃўрЃЌ рЃљрЃЏ рЃцрЃарЃЮрЃцрЃћрЃарЃЌрЃўрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ рЃЏрЃўрЃАрЃў рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљ
@propertyWrapper
struct lazyPropertyWrapper {
    
    lazy var cachedData: String = {
        print("lazy рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃЊрЃћрЃЉрЃљ")
        return "lazy рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃћрЃЉрЃБрЃџрЃўрЃљ"
    }()
    
    var wrappedValue: Void {
        return
    }
    
    init() {
    }
}

var testLazy = lazyPropertyWrapper()
print(testLazy.cachedData)
print(testLazy.cachedData) // рЃўрЃЏрЃўрЃА рЃњрЃљрЃАрЃљрЃбрЃћрЃАрЃбрЃљрЃЊ рЃљрЃарЃўрЃА рЃЌрЃБ рЃљрЃарЃљ рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃў рЃюрЃљрЃЏрЃЊрЃЋрЃўрЃџрЃљрЃЊ рЃџрЃћрЃўрЃќрЃў, рЃЋрЃЉрЃћрЃГрЃЊрЃљрЃЋ рЃЏрЃћрЃЮрЃарЃћрЃЊрЃљрЃф рЃЊрЃљ рЃљрЃЏ рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃўрЃА рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃљрЃфрЃўрЃўрЃАрЃљрЃА рЃЊрЃљрЃЏрЃљрЃбрЃћрЃЉрЃБрЃџрЃў print("lazy рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃЊрЃћрЃЉрЃљ") рЃарЃљрЃЊрЃњрЃљрЃю рЃљрЃдрЃљрЃа рЃћрЃерЃЋрЃћрЃЉрЃљ рЃЏрЃћрЃЮрЃарЃћрЃЊ, рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃЏрЃљрЃА рЃарЃЮрЃЏ рЃБрЃЎрЃЋрЃћ рЃЏрЃЮрЃ«рЃЊрЃљ рЃќрЃљрЃарЃЏрЃљрЃфрЃў рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃљрЃфрЃўрЃљ.


//: # Optional Task
//: > рЃЉрЃљрЃарЃЉрЃљрЃарЃћрЃЏ рЃњрЃљрЃЊрЃљрЃгрЃДрЃЋрЃўрЃбрЃљ рЃърЃарЃЮрЃњрЃарЃљрЃЏрЃўрЃарЃћрЃЉрЃљрЃАрЃЌрЃљрЃю рЃћрЃарЃЌрЃљрЃЊ рЃЊрЃљрЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌрЃў рЃАрЃљрЃЏрЃАрЃљрЃ«рЃБрЃарЃў рЃЊрЃљрЃћрЃгрЃДрЃЮ рЃЊрЃљ рЃбрЃљрЃарЃЮрЃА рЃАрЃљрЃЏрЃЎрЃўрЃЌрЃ«рЃљрЃЮ рЃ»рЃўрЃ«рЃБрЃарЃў рЃњрЃљрЃ«рЃАрЃюрЃљ. рЃЏрЃўрЃАрЃў рЃАрЃљрЃ«рЃћрЃџрЃў рЃБрЃфрЃћрЃЉ рЃњрЃљрЃЋрЃљрЃарЃЊрЃљ рЃЊрЃљ рЃЦрЃљрЃарЃЌрЃЋрЃћрЃџрЃў рЃЋрЃљрЃарЃАрЃЎрЃЋрЃџрЃљрЃЋрЃћрЃЉрЃўрЃА рЃДрЃБрЃарЃљрЃЏрЃЊрЃћрЃф рЃЏрЃўрЃЋрЃўрЃЊрЃљ. рЃћрЃарЃЌ рЃЊрЃдрЃћрЃА рЃЏрЃљрЃА рЃ»рЃўрЃ«рЃБрЃарЃерЃў рЃФрЃљрЃџрЃўрЃљрЃю рЃюрЃљрЃфрЃюрЃЮрЃЉрЃў рЃАрЃљрЃ«рЃћрЃћрЃЉрЃў рЃњрЃљрЃЏрЃЮрЃћрЃфрЃ«рЃљрЃЊрЃљ, рЃЉрЃћрЃЊрЃўрЃюрЃљ рЃЊрЃљ рЃерЃљрЃЋрЃў рЃърЃарЃўрЃюрЃфрЃў. рЃърЃарЃЮрЃцрЃћрЃАрЃўрЃЮрЃюрЃљрЃџрЃЏрЃљ рЃюрЃљрЃЌрЃћрЃџрЃЏрЃ«рЃўрЃџрЃЋрЃћрЃџрЃЏрЃљ рЃњрЃљрЃерЃљрЃџрЃљ рЃЎрЃљрЃарЃбрЃў рЃЊрЃљ рЃЊрЃљрЃўрЃгрЃДрЃЮ рЃЏрЃљрЃЌ рЃЏрЃЮрЃЏрЃљрЃЋрЃљрЃџрЃерЃў рЃ«рЃћрЃџрЃћрЃЉрЃўрЃА рЃцрЃљрЃЌрЃБрЃарЃў. рЃЉрЃљрЃарЃЉрЃљрЃарЃћрЃА рЃбрЃљрЃарЃЮрЃА рЃЊрЃљрЃАрЃбрЃљ рЃАрЃљрЃЎрЃЏрЃљрЃЮрЃЊ рЃБрЃюрЃўрЃЎрЃљрЃџрЃБрЃарЃўрЃљ, рЃўрЃА рЃЏрЃ«рЃЮрЃџрЃЮрЃЊ 12 рЃЎрЃљрЃарЃбрЃА рЃерЃћрЃўрЃфрЃљрЃЋрЃА - **Star, Empress, Tower, Hanged Man, Chariot, Moon, Hierophant, Devil, Lovers, Wheel of Fortune, Fool, Magician** рЃЊрЃљ рЃЏрЃљрЃЌ рЃљрЃдрЃгрЃћрЃарЃћрЃЉрЃА -
//: - Star: рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃўрЃЏрЃћрЃЊрЃА, рЃерЃЌрЃљрЃњрЃЮрЃюрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃБрЃџрЃўрЃћрЃа рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљрЃА, рЃЮрЃърЃбрЃўрЃЏрЃўрЃќрЃЏрЃА рЃЊрЃљ рЃЏрЃЮрЃЏрЃљрЃЋрЃџрЃўрЃА рЃарЃгрЃЏрЃћрЃюрЃљрЃА.
//: - Empress: рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃљрЃдрЃќрЃарЃЊрЃљрЃА, рЃАрЃўрЃБрЃ«рЃЋрЃћрЃА рЃЊрЃљ рЃЊрЃћрЃЊрЃЮрЃЉрЃарЃўрЃЋ рЃўрЃюрЃАрЃбрЃўрЃюрЃЦрЃбрЃћрЃЉрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃюрЃљрЃДрЃЮрЃцрЃўрЃћрЃарЃћрЃЉрЃљрЃА, рЃЎрЃарЃћрЃљрЃбрЃўрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃ░рЃљрЃарЃЏрЃЮрЃюрЃўрЃљрЃА рЃБрЃарЃЌрЃўрЃћрЃарЃЌрЃЮрЃЉрЃћрЃЉрЃерЃў.
//: - Tower: рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃБрЃћрЃфрЃљрЃа рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃљрЃА, рЃЦрЃљрЃЮрЃАрЃА рЃЊрЃљ рЃњрЃљрЃюрЃљрЃЊрЃњрЃБрЃарЃћрЃЉрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃљрЃ»рЃљрЃюрЃДрЃћрЃЉрЃљрЃА, рЃњрЃљрЃЏрЃЮрЃфрЃ«рЃљрЃЊрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃФрЃЋрЃћрЃџрЃў рЃАрЃбрЃарЃБрЃЦрЃбрЃБрЃарЃћрЃЉрЃўрЃА рЃюрЃњрЃарЃћрЃЋрЃљрЃА рЃљрЃ«рЃљрЃџрЃў рЃгрЃљрЃЏрЃЮрЃгрЃДрЃћрЃЉрЃўрЃАрЃЌрЃЋрЃўрЃА.
//: - Hanged Man: рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЏрЃАрЃ«рЃЋрЃћрЃарЃърЃџрЃА, рЃЊрЃљрЃюрЃћрЃЉрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃерЃЋрЃћрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃерЃћрЃЕрЃћрЃарЃћрЃЉрЃўрЃА, рЃљрЃ«рЃљрЃџрЃў рЃърЃћрЃарЃАрЃърЃћрЃЦрЃбрЃўрЃЋрЃћрЃЉрЃўрЃА рЃЏрЃЮрЃърЃЮрЃЋрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЌрЃЋрЃўрЃЌрЃарЃћрЃцрЃџрЃћрЃЦрЃАрЃўрЃўрЃА рЃърЃћрЃарЃўрЃЮрЃЊрЃА.
//: - Chariot: рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃюрЃћрЃЉрЃўрЃАрЃДрЃЮрЃцрЃљрЃА, рЃЏрЃЮрЃюрЃЊрЃЮрЃЏрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃЏрЃљрЃарЃ»рЃЋрЃћрЃЉрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃАрЃљрЃЎрЃБрЃЌрЃљрЃа рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃљрЃќрЃћ рЃЎрЃЮрЃюрЃбрЃарЃЮрЃџрЃўрЃА рЃљрЃдрЃћрЃЉрЃљрЃА, рЃЏрЃўрЃќрЃюрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃгрЃћрЃЋрЃљрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃарЃЎрЃЮрЃџрЃћрЃЉрЃћрЃЉрЃўрЃА рЃњрЃљрЃЊрЃљрЃџрЃљрЃ«рЃЋрЃљрЃА рЃцрЃЮрЃЎрЃБрЃАрЃўрЃарЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃАрЃгрЃарЃљрЃцрЃЋрЃўрЃА рЃњрЃќрЃўрЃЌ.
//: - Moon: рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃюрЃбрЃБрЃўрЃфрЃўрЃљрЃА, рЃўрЃџрЃБрЃќрЃўрЃљрЃА рЃЊрЃљ рЃЦрЃЋрЃћрЃфрЃюрЃЮрЃЉрЃўрЃћрЃа рЃљрЃќрЃарЃћрЃЉрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃњрЃљрЃБрЃарЃЎрЃЋрЃћрЃЋрЃџрЃЮрЃЉрЃљрЃА, рЃЊрЃљрЃЉрЃюрЃћрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА, рЃћрЃюрЃЊрЃЮрЃЌ рЃАрЃљрЃЎрЃБрЃЌрЃљрЃа рЃўрЃюрЃАрЃбрЃўрЃюрЃЦрЃбрЃћрЃЉрЃА рЃБрЃфрЃюрЃЮрЃЉрЃўрЃАрЃЎрЃћрЃю рЃюрЃљрЃЋрЃўрЃњрЃљрЃфрЃўрЃўрЃА рЃЊрЃарЃЮрЃА.
//: - Hierophant: рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃбрЃарЃљрЃЊрЃўрЃфрЃўрЃљрЃА, рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃБрЃџрЃўрЃћрЃа рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃАрЃўрЃЉрЃарЃФрЃюрЃўрЃА рЃФрЃўрЃћрЃЉрЃљрЃА рЃЊрЃљрЃЏрЃЎрЃЋрЃўрЃЊрЃарЃћрЃЉрЃБрЃџрЃў рЃарЃгрЃЏрЃћрЃюрЃћрЃЉрЃўрЃАрЃњрЃљрЃю, рЃўрЃюрЃАрЃбрЃўрЃбрЃБрЃбрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃћрЃюрЃбрЃЮрЃарЃћрЃЉрЃўрЃАрЃњрЃљрЃю.
//: - Devil: рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃфрЃЊрЃБрЃюрЃћрЃЉрЃљрЃА, рЃЏрЃЮрЃюрЃЮрЃЉрЃљрЃАрЃљ рЃЊрЃљ рЃЏрЃљрЃбрЃћрЃарЃўрЃљрЃџрЃўрЃќрЃЏрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃљрЃЊрЃљрЃЏрЃўрЃљрЃюрЃўрЃА рЃЉрЃБрЃюрЃћрЃЉрЃўрЃА рЃЉрЃюрЃћрЃџ рЃљрЃАрЃърЃћрЃЦрЃбрЃћрЃЉрЃА, рЃЊрЃљрЃЏрЃЮрЃЎрЃўрЃЊрЃћрЃЉрЃБрЃџрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃерЃћрЃЏрЃќрЃдрЃБрЃЊрЃЋрЃћрЃџрЃў рЃарЃгрЃЏрЃћрЃюрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЕрЃЋрЃћрЃЋрЃћрЃЉрЃўрЃАрЃњрЃљрЃю рЃЌрЃљрЃЋрЃўрЃА рЃЊрЃљрЃдрЃгрЃћрЃЋрЃўрЃА рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА.
//: - Lovers: рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃърЃљрЃарЃбрЃюрЃўрЃЮрЃарЃЮрЃЉрЃљрЃА, рЃљрЃарЃЕрЃћрЃЋрЃљрЃюрЃА рЃЊрЃљ рЃ░рЃљрЃарЃЏрЃЮрЃюрЃўрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃАрЃўрЃДрЃЋрЃљрЃарЃБрЃџрЃА, рЃЏрЃўрЃќрЃўрЃЊрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃЊрЃљрЃгрЃДрЃЋрЃћрЃбрЃўрЃџрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃћрЃЉрЃўрЃА рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА рЃдрЃўрЃарЃћрЃЉрЃБрЃџрЃћрЃЉрЃћрЃЉрЃќрЃћ рЃЊрЃљ рЃАрЃ«рЃЋрЃћрЃЉрЃЌрЃљрЃю рЃЎрЃљрЃЋрЃерЃўрЃарЃћрЃЉрЃќрЃћ рЃЊрЃљрЃДрЃарЃЊрЃюрЃЮрЃЉрЃўрЃЌ.
//: - Wheel of Fortune: рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЉрЃћрЃЊрЃА, рЃфрЃўрЃЎрЃџрЃћрЃЉрЃА рЃЊрЃљ рЃЏрЃЮрЃБрЃџрЃЮрЃЊрЃюрЃћрЃџ рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃћрЃЉрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃдрЃЉрЃљрЃџрЃА, рЃерЃћрЃАрЃљрЃФрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃћрЃЉрЃА рЃЊрЃљ рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃўрЃАрЃћрЃБрЃџрЃў рЃЏрЃЮрЃњрЃќрЃљрЃБрЃарЃЮрЃЉрЃўрЃА рЃљрЃдрЃЏрЃљрЃЋрЃџрЃЮрЃЉрЃљрЃАрЃљ рЃЊрЃљ рЃЋрЃљрЃарЃЊрЃюрЃљрЃА, рЃњрЃЋрЃљрЃ«рЃАрЃћрЃюрЃћрЃЉрЃА, рЃарЃЮрЃЏ рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃљ рЃњрЃљрЃарЃЊрЃљрЃБрЃЋрЃљрЃџрЃўрЃљ.
//: - Fool: рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃБрЃЊрЃљрЃюрЃљрЃерЃљрЃБрЃџрЃЮрЃЉрЃљрЃА, рЃАрЃърЃЮрЃюрЃбрЃљрЃюрЃБрЃарЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃљрЃ«рЃљрЃџ рЃгрЃљрЃЏрЃЮрЃгрЃДрЃћрЃЉрЃћрЃЉрЃА. рЃћрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃарЃгрЃЏрЃћрЃюрЃўрЃА рЃюрЃљрЃ«рЃбрЃЮрЃЏрЃА, рЃЌрЃљрЃЋрЃњрЃљрЃЊрЃљрЃАрЃљрЃЋрЃџрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃљрЃЏрЃДрЃљрЃарЃЮрЃА рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃўрЃАрЃљрЃЊрЃЏрЃў рЃюрЃЊрЃЮрЃЉрЃљрЃА.
//: - Magician: рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃњрЃљрЃЏрЃЮрЃЋрЃџрЃўрЃюрЃћрЃЉрЃљрЃА, рЃФрЃљрЃџрЃљрЃА рЃЊрЃљ рЃърЃЮрЃбрЃћрЃюрЃфрЃўрЃљрЃџрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЎрЃарЃћрЃљрЃбрЃўрЃБрЃџрЃЮрЃЉрЃљрЃА, рЃБрЃюрЃљрЃарЃА рЃЊрЃљ рЃБрЃюрЃљрЃарЃА, рЃўрЃЊрЃћрЃћрЃЉрЃў рЃарЃћрЃљрЃџрЃЮрЃЉрЃљрЃЊ рЃњрЃљрЃарЃЊрЃљрЃЦрЃЏрЃюрЃљрЃА рЃЮрЃарЃўрЃћрЃюрЃбрЃўрЃарЃћрЃЉрЃБрЃџрЃў рЃњрЃљрЃюрЃќрЃарЃљрЃ«рЃЋрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃЮрЃЦрЃЏрЃћрЃЊрЃћрЃЉрЃўрЃА рЃњрЃќрЃўрЃЌ.
//: -----------------------------------------------------------------------------
//: ### РюЁ 1. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ Enum рЃАрЃљрЃ«рЃћрЃџрЃљрЃЊ TarotCard рЃЊрЃљ рЃњрЃљрЃюрЃАрЃљрЃќрЃдрЃЋрЃарЃћрЃЌ рЃЏрЃљрЃАрЃерЃў 12 рЃЎрЃљрЃарЃбрЃўрЃА рЃЦрЃћрЃўрЃАрЃў.
//: ### РюЁ 2. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃАрЃбрЃљрЃбрЃўрЃЎрЃБрЃарЃў рЃЏрЃћрЃЌрЃЮрЃЊрЃў TarotCard-рЃерЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃЎрЃљрЃарЃбрЃА рЃерЃћрЃарЃЕрЃћрЃЋрЃўрЃЌрЃљрЃЊ
//: ### РюЁ 3. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃЏрЃћрЃЌрЃЮрЃЊрЃў TarotCard-рЃерЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃЎрЃљрЃарЃбрЃўрЃА рЃљрЃдрЃгрЃћрЃарЃљрЃА string-рЃўрЃА рЃАрЃљрЃ«рЃўрЃЌ
//: ### РюЁ 4. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃАрЃбрЃарЃБрЃЦрЃбрЃБрЃарЃљ рЃАрЃљрЃ«рЃћрЃџрЃљрЃЊ TarotReading. рЃњрЃљрЃБрЃгрЃћрЃарЃћрЃЌ рЃцрЃарЃЮрЃцрЃћрЃарЃЌрЃўрЃћрЃЉрЃў рЃгрЃљрЃарЃАрЃБрЃџрЃў, рЃљрЃгрЃЏрЃДрЃЮ рЃЊрЃљ рЃЏрЃЮрЃЏрЃљрЃЋрЃљрЃџрЃў. рЃњрЃљрЃБрЃЎрЃћрЃЌрЃћрЃЌ рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃљрЃфрЃўрЃљ рЃљрЃЏ рЃцрЃарЃЮрЃърЃћрЃарЃЌрЃўрЃћрЃЉрЃА рЃарЃљрЃЌрЃљ рЃЏрЃљрЃЌ рЃЏрЃўрЃўрЃдрЃЮрЃю рЃерЃћрЃарЃЕрЃћрЃЋрЃўрЃЌрЃў рЃбрЃљрЃарЃЮрЃА рЃЎрЃљрЃарЃбрЃўрЃА рЃљрЃдрЃгрЃћрЃарЃўрЃА рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљ.
//: ### РюЁ 5. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃЏрЃћрЃЌрЃЮрЃЊрЃў TarotReading-рЃерЃў, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃљрЃЏ рЃАрЃљрЃЏ рЃљрЃарЃЕрЃћрЃБрЃџ рЃбрЃљрЃарЃЮрЃА рЃЎрЃљрЃарЃбрЃА.
enum TarotCard: CaseIterable {
    case Star, Empress, Tower, HangedMan, Chariot, Moon, Hierophant, Devil, Lovers, WheelOfFortune, Fool, Magician
    
    static func pickRandomCard() -> TarotCard {
        let randI = Int.random(in: 0..<Self.allCases.count)
        return Self.allCases[randI]
    }
    
    func getCardDescription(_ card: TarotCard) -> String {
        var cardDescription = ""
        
        switch card { // рЃЎрЃљрЃарЃбрЃўрЃА рЃљрЃдрЃгрЃћрЃарЃћрЃЉрЃў raw рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃћрЃЉрЃљрЃЊрЃљрЃф рЃерЃћрЃўрЃФрЃџрЃћрЃЉрЃЮрЃЊрЃљ рЃњрЃљрЃњрЃЋрЃћрЃгрЃћрЃарЃљ рЃЦрЃћрЃўрЃАрЃћрЃЉрЃўрЃАрЃЌрЃЋрЃўрЃА, рЃЏрЃљрЃњрЃарЃљрЃЏ рЃљрЃа рЃЊрЃљрЃЋрЃљрЃЏрЃљрЃбрЃћрЃЉ рЃўрЃЏ рЃЋрЃћрЃарЃАрЃўрЃљрЃА
        case .Star:
            cardDescription = "рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃўрЃЏрЃћрЃЊрЃА, рЃерЃЌрЃљрЃњрЃЮрЃюрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃБрЃџрЃўрЃћрЃа рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљрЃА, рЃЮрЃърЃбрЃўрЃЏрЃўрЃќрЃЏрЃА рЃЊрЃљ рЃЏрЃЮрЃЏрЃљрЃЋрЃџрЃўрЃА рЃарЃгрЃЏрЃћрЃюрЃљрЃА."
        case .Empress:
            cardDescription = "рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃљрЃдрЃќрЃарЃЊрЃљрЃА, рЃАрЃўрЃБрЃ«рЃЋрЃћрЃА рЃЊрЃљ рЃЊрЃћрЃЊрЃЮрЃЉрЃарЃўрЃЋ рЃўрЃюрЃАрЃбрЃўрЃюрЃЦрЃбрЃћрЃЉрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃюрЃљрЃДрЃЮрЃцрЃўрЃћрЃарЃћрЃЉрЃљрЃА, рЃЎрЃарЃћрЃљрЃбрЃўрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃ░рЃљрЃарЃЏрЃЮрЃюрЃўрЃљрЃА рЃБрЃарЃЌрЃўрЃћрЃарЃЌрЃЮрЃЉрЃћрЃЉрЃерЃў."
        case .Tower:
            cardDescription = "рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃБрЃћрЃфрЃљрЃа рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃљрЃА, рЃЦрЃљрЃЮрЃАрЃА рЃЊрЃљ рЃњрЃљрЃюрЃљрЃЊрЃњрЃБрЃарЃћрЃЉрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃљрЃ»рЃљрЃюрЃДрЃћрЃЉрЃљрЃА, рЃњрЃљрЃЏрЃЮрЃфрЃ«рЃљрЃЊрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃФрЃЋрЃћрЃџрЃў рЃАрЃбрЃарЃБрЃЦрЃбрЃБрЃарЃћрЃЉрЃўрЃА рЃюрЃњрЃарЃћрЃЋрЃљрЃА рЃљрЃ«рЃљрЃџрЃў рЃгрЃљрЃЏрЃЮрЃгрЃДрЃћрЃЉрЃўрЃАрЃЌрЃЋрЃўрЃА."
        case .HangedMan:
            cardDescription = "рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЏрЃАрЃ«рЃЋрЃћрЃарЃърЃџрЃА, рЃЊрЃљрЃюрЃћрЃЉрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃерЃЋрЃћрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃерЃћрЃЕрЃћрЃарЃћрЃЉрЃўрЃА, рЃљрЃ«рЃљрЃџрЃў рЃърЃћрЃарЃАрЃърЃћрЃЦрЃбрЃўрЃЋрЃћрЃЉрЃўрЃА рЃЏрЃЮрЃърЃЮрЃЋрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЌрЃЋрЃўрЃЌрЃарЃћрЃцрЃџрЃћрЃЦрЃАрЃўрЃўрЃА рЃърЃћрЃарЃўрЃЮрЃЊрЃА."
        case .Chariot:
            cardDescription = "рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃюрЃћрЃЉрЃўрЃАрЃДрЃЮрЃцрЃљрЃА, рЃЏрЃЮрЃюрЃЊрЃЮрЃЏрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃЏрЃљрЃарЃ»рЃЋрЃћрЃЉрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃАрЃљрЃЎрЃБрЃЌрЃљрЃа рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃљрЃќрЃћ рЃЎрЃЮрЃюрЃбрЃарЃЮрЃџрЃўрЃА рЃљрЃдрЃћрЃЉрЃљрЃА, рЃЏрЃўрЃќрЃюрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃгрЃћрЃЋрЃљрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃарЃЎрЃЮрЃџрЃћрЃЉрЃћрЃЉрЃўрЃА рЃњрЃљрЃЊрЃљрЃџрЃљрЃ«рЃЋрЃљрЃА рЃцрЃЮрЃЎрЃБрЃАрЃўрЃарЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃАрЃгрЃарЃљрЃцрЃЋрЃўрЃА рЃњрЃќрЃўрЃЌ."
        case .Moon:
            cardDescription = "рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃюрЃбрЃБрЃўрЃфрЃўрЃљрЃА, рЃўрЃџрЃБрЃќрЃўрЃљрЃА рЃЊрЃљ рЃЦрЃЋрЃћрЃфрЃюрЃЮрЃЉрЃўрЃћрЃа рЃљрЃќрЃарЃћрЃЉрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃњрЃљрЃБрЃарЃЎрЃЋрЃћрЃЋрЃџрЃЮрЃЉрЃљрЃА, рЃЊрЃљрЃЉрЃюрЃћрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА, рЃћрЃюрЃЊрЃЮрЃЌ рЃАрЃљрЃЎрЃБрЃЌрЃљрЃа рЃўрЃюрЃАрЃбрЃўрЃюрЃЦрЃбрЃћрЃЉрЃА рЃБрЃфрЃюрЃЮрЃЉрЃўрЃАрЃЎрЃћрЃю рЃюрЃљрЃЋрЃўрЃњрЃљрЃфрЃўрЃўрЃА рЃЊрЃарЃЮрЃА."
        case .Hierophant:
            cardDescription = "рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃбрЃарЃљрЃЊрЃўрЃфрЃўрЃљрЃА, рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃБрЃџрЃўрЃћрЃа рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃАрЃўрЃЉрЃарЃФрЃюрЃўрЃА рЃФрЃўрЃћрЃЉрЃљрЃА рЃЊрЃљрЃЏрЃЎрЃЋрЃўрЃЊрЃарЃћрЃЉрЃБрЃџрЃў рЃарЃгрЃЏрЃћрЃюрЃћрЃЉрЃўрЃАрЃњрЃљрЃю, рЃўрЃюрЃАрЃбрЃўрЃбрЃБрЃбрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃћрЃюрЃбрЃЮрЃарЃћрЃЉрЃўрЃАрЃњрЃљрЃю."
        case .Devil:
            cardDescription = "рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃфрЃЊрЃБрЃюрЃћрЃЉрЃљрЃА, рЃЏрЃЮрЃюрЃЮрЃЉрЃљрЃАрЃљ рЃЊрЃљ рЃЏрЃљрЃбрЃћрЃарЃўрЃљрЃџрЃўрЃќрЃЏрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃљрЃЊрЃљрЃЏрЃўрЃљрЃюрЃўрЃА рЃЉрЃБрЃюрЃћрЃЉрЃўрЃА рЃЉрЃюрЃћрЃџ рЃљрЃАрЃърЃћрЃЦрЃбрЃћрЃЉрЃА, рЃЊрЃљрЃЏрЃЮрЃЎрЃўрЃЊрЃћрЃЉрЃБрЃџрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃерЃћрЃЏрЃќрЃдрЃБрЃЊрЃЋрЃћрЃџрЃў рЃарЃгрЃЏрЃћрЃюрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЕрЃЋрЃћрЃЋрЃћрЃЉрЃўрЃАрЃњрЃљрЃю рЃЌрЃљрЃЋрЃўрЃА рЃЊрЃљрЃдрЃгрЃћрЃЋрЃўрЃА рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА."
        case .Lovers:
            cardDescription = "рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃърЃљрЃарЃбрЃюрЃўрЃЮрЃарЃЮрЃЉрЃљрЃА, рЃљрЃарЃЕрЃћрЃЋрЃљрЃюрЃА рЃЊрЃљ рЃ░рЃљрЃарЃЏрЃЮрЃюрЃўрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃАрЃўрЃДрЃЋрЃљрЃарЃБрЃџрЃА, рЃЏрЃўрЃќрЃўрЃЊрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃЊрЃљрЃгрЃДрЃЋрЃћрЃбрЃўрЃџрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃћрЃЉрЃўрЃА рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА рЃдрЃўрЃарЃћрЃЉрЃБрЃџрЃћрЃЉрЃћрЃЉрЃќрЃћ рЃЊрЃљ рЃАрЃ«рЃЋрЃћрЃЉрЃЌрЃљрЃю рЃЎрЃљрЃЋрЃерЃўрЃарЃћрЃЉрЃќрЃћ рЃЊрЃљрЃДрЃарЃЊрЃюрЃЮрЃЉрЃўрЃЌ."
        case .WheelOfFortune:
            cardDescription = "рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЉрЃћрЃЊрЃА, рЃфрЃўрЃЎрЃџрЃћрЃЉрЃА рЃЊрЃљ рЃЏрЃЮрЃБрЃџрЃЮрЃЊрЃюрЃћрЃџ рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃћрЃЉрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃдрЃЉрЃљрЃџрЃА, рЃерЃћрЃАрЃљрЃФрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃћрЃЉрЃА рЃЊрЃљ рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃўрЃАрЃћрЃБрЃџрЃў рЃЏрЃЮрЃњрЃќрЃљрЃБрЃарЃЮрЃЉрЃўрЃА рЃљрЃдрЃЏрЃљрЃЋрЃџрЃЮрЃЉрЃљрЃАрЃљ рЃЊрЃљ рЃЋрЃљрЃарЃЊрЃюрЃљрЃА, рЃњрЃЋрЃљрЃ«рЃАрЃћрЃюрЃћрЃЉрЃА, рЃарЃЮрЃЏ рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃљ рЃњрЃљрЃарЃЊрЃљрЃБрЃЋрЃљрЃџрЃўрЃљ."
        case .Fool:
            cardDescription = "рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃБрЃЊрЃљрЃюрЃљрЃерЃљрЃБрЃџрЃЮрЃЉрЃљрЃА, рЃАрЃърЃЮрЃюрЃбрЃљрЃюрЃБрЃарЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃљрЃ«рЃљрЃџ рЃгрЃљрЃЏрЃЮрЃгрЃДрЃћрЃЉрЃћрЃЉрЃА. рЃћрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃарЃгрЃЏрЃћрЃюрЃўрЃА рЃюрЃљрЃ«рЃбрЃЮрЃЏрЃА, рЃЌрЃљрЃЋрЃњрЃљрЃЊрЃљрЃАрЃљрЃЋрЃџрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃљрЃЏрЃДрЃљрЃарЃЮрЃА рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃўрЃАрЃљрЃЊрЃЏрЃў рЃюрЃЊрЃЮрЃЉрЃљрЃА."
        case .Magician:
            cardDescription = "рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃњрЃљрЃЏрЃЮрЃЋрЃџрЃўрЃюрЃћрЃЉрЃљрЃА, рЃФрЃљрЃџрЃљрЃА рЃЊрЃљ рЃърЃЮрЃбрЃћрЃюрЃфрЃўрЃљрЃџрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЎрЃарЃћрЃљрЃбрЃўрЃБрЃџрЃЮрЃЉрЃљрЃА, рЃБрЃюрЃљрЃарЃА рЃЊрЃљ рЃБрЃюрЃљрЃарЃА, рЃўрЃЊрЃћрЃћрЃЉрЃў рЃарЃћрЃљрЃџрЃЮрЃЉрЃљрЃЊ рЃњрЃљрЃарЃЊрЃљрЃЦрЃЏрЃюрЃљрЃА рЃЮрЃарЃўрЃћрЃюрЃбрЃўрЃарЃћрЃЉрЃБрЃџрЃў рЃњрЃљрЃюрЃќрЃарЃљрЃ«рЃЋрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃЮрЃЦрЃЏрЃћрЃЊрЃћрЃЉрЃўрЃА рЃњрЃќрЃўрЃЌ."
        }
        
        return cardDescription
    }
}

struct TarotReading {
    var Past: TarotCard
    var Present: TarotCard
    var Future: TarotCard
    

    init() {
        self.Past = TarotCard.pickRandomCard()
        self.Present = TarotCard.pickRandomCard()
        self.Future = TarotCard.pickRandomCard()
    }
    
    func getMyTarotReading() {
        print("­Ъћ« рЃгрЃљрЃарЃАрЃБрЃџрЃў: \(Past) -> \"\(Past.getCardDescription(Past))\"")
        print("­Ъћ« рЃљрЃгрЃЏрЃДрЃЮ: \(Present) -> \"\(Present.getCardDescription(Present))\"")
        print("­Ъћ« рЃЏрЃЮрЃЏрЃљрЃЋрЃљрЃџрЃў: \(Future) -> \"\(Future.getCardDescription(Future))\"")
    }
}

let getAnswers = TarotReading()
getAnswers.getMyTarotReading() // рЃЎрЃЮрЃЊрЃўрЃА рЃърЃарЃЮрЃЉрЃџрЃћрЃЏрЃљ рЃўрЃАрЃљрЃљ рЃарЃЮрЃЏ рЃерЃћрЃАрЃљрЃФрЃџрЃћрЃЉрЃћрЃџрЃўрЃљ рЃћрЃарЃЌрЃќрЃћ рЃЏрЃћрЃб рЃЊрЃарЃЮрЃўрЃА рЃЦрЃћрЃўрЃАрЃќрЃћ рЃЏрЃўрЃЋрЃўрЃдрЃЮрЃЌ рЃћрЃарЃЌрЃў рЃЊрЃљ рЃўрЃњрЃўрЃЋрЃћ рЃЎрЃљрЃарЃбрЃў. рЃљрЃЏрЃўрЃбрЃЮрЃЏ рЃарЃћрЃюрЃЊрЃЮрЃЏрЃўрЃА рЃЏрЃљрЃњрЃўрЃЋрЃарЃљрЃЊ .shuffled()-рЃўрЃА рЃњрЃљрЃЏрЃЮрЃДрЃћрЃюрЃћрЃЉрЃљ рЃЊрЃљ рЃЊрЃљрЃАрЃбрЃўрЃА рЃќрЃћрЃЋрЃўрЃЌ рЃЏрЃЊрЃћрЃЉрЃљрЃарЃћ рЃљрЃюрЃБ рЃЦрЃћрЃўрЃАрЃћрЃЉрЃўрЃЊрЃљрЃю рЃърЃўрЃарЃЋрЃћрЃџрЃўрЃЋрЃћ рЃЎрЃљрЃарЃбрЃўрЃА рЃЏрЃўрЃћрЃАрЃљрЃўрЃюрЃћрЃЉрЃљрЃљ рЃЮрЃцрЃфрЃўрЃљ рЃЊрЃљ рЃЏрЃћрЃарЃћ рЃљрЃЏ рЃЦрЃћрЃўрЃАрЃўрЃА рЃЏрЃЮрЃерЃЮрЃарЃћрЃЉрЃљ рЃЊрЃљрЃарЃЕрЃћрЃюрЃўрЃџрЃў рЃљрЃарЃЕрЃћрЃЋрЃюрЃћрЃЉрЃўрЃЊрЃљрЃю.
